{%- liquid 
  assign productExcludeTag = settings.product_exclude_tag_text
  assign allTags = collection.tags | downcase
-%}

<div class="{% if section.settings.fluid_layout %}container-fluid{% else %}container{% endif %}">
  <div class="row mt-5 mb-5">
    <div class="col-12">
      {% if collection.description != blank %}
        <div class="text-center">
          {{ collection.description }}
        </div>
    {% endif %}
    </div> 
  </div>
  <div class="row" id="colproductdata-sec">

    <div class="col-12 mt-5 d-flex justify-content-between align-items-center">
      <myproduct-filter>
        <div class="d-flex align-items-center">
          <span class="me-3 fw-bold">Filter : </span>
          {%- for filter in collection.filters -%}
            <div class="dropdown me-3">
              <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdown-{{ filter.label }}" data-bs-toggle="dropdown" aria-expanded="false">
                {{ filter.label }}
              </button>
              <div class="dropdown-menu" aria-labelledby="dropdown-{{ filter.label }}">
                {% if filter.type == 'list' %}
                  {%- for value in filter.values -%}
                    <div class="form-check">
                      <input type="checkbox"
                          class="form-check-input"
                          name="{{ value.param_name }}"
                          value="{{ value.value }}"
                          id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                          data-handle="{{ value.value | handle }}" 
                          data-filter-label = "{{ value.label | capitalize }}"
                          {% if value.active %}checked{% endif %}
                          {% if value.count == 0 and value.active == false %}disabled{% endif %}
                      >
                      <label for="Filter-{{ filter.label | escape }}-{{ forloop.index }}" class="form-check-label option-label filter-checkbox{% if value.count == 0 and value.active == false %} filter-checkbox--disabled{% endif %}" title="{{ value.label | escape }}">
                        {{ value.label | escape }} 
                      </label>
                    </div>
                  {% endfor %}
                {% elsif filter.type == 'price_range' %}
                  <div class="range-input">
                    <div class="pb-4">
                      <span class="price_range_min">{{ cart.currency.symbol }}
                        <span id="price_range_min_value">{{ filter.min_value.value | money_without_currency | replace: ',', '' | plus: 0 | ceil }}</span>
                      </span> - 
                      <span class="price_range_max">{{ cart.currency.symbol }}
                        <span id="price_range_max_value">{% if filter.max_value.value %}{{ filter.max_value.value | money_without_currency | replace: ',', '' | plus: 0 | ceil }}{% else %}{{ filter.range_max | money_without_currency | replace: ',', '' | plus: 0 | ceil }}{% endif %}</span>
                      </span>
                    </div>
                    <input type="range" store-currency-symbol="{{ cart.currency.symbol }}" data-filter-label = "" class="range-min" name="{{ filter.min_value.param_name }}" min="0" max="{{ filter.range_max | money_without_currency | replace: ',', '' | plus: 0 | ceil }}" value="{{ filter.min_value.value | money_without_currency | replace: ',', '' | plus: 0 | ceil }}" step="10">
                    <input type="range" store-currency-symbol="{{ cart.currency.symbol }}" data-filter-label = "" class="range-max" name="{{ filter.max_value.param_name }}" min="0" max="{{ filter.range_max | money_without_currency | replace: ',', '' | plus: 0 | ceil }}" value="{% if filter.max_value.value %}{{ filter.max_value.value | money_without_currency | replace: ',', '' | plus: 0 | ceil }}{% else %}{{ filter.range_max | money_without_currency | replace: ',', '' | plus: 0 | ceil }}{% endif %}" step="10">
                  </div>
                {% endif %}
            
              </div>
            </div>   
          {% endfor %}
  
          {% for block in section.blocks %}
            {%- if block.type == 'tags_group' -%}
              {%- liquid 
                assign tagsList = block.settings.tag_list | strip | newline_to_br | strip_newlines | split: "<br />"
              -%}
              <div class="dropdown me-3">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdown-{{ block.id }}" data-bs-toggle="dropdown" aria-expanded="false">
                  {{ block.settings.title }}
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdown-{{ block.id }}">
                  {% for tag in tagsList %}
                    {% assign tagValue = tag | downcase %}
                    {% if allTags contains tagValue %}
                      <div class="form-check">
                        <input type="checkbox"
                            class="form-check-input"
                            name="constraint"
                            value="{{ tag | handleize }}"
                            id="Filter-{{ tag | handleize }}-{{ forloop.index }}" 
                            data-filter-label = "{{ tag | capitalize }}" 
                            {% if current_tags contains tagValue  %} checked{% endif %} 
                        >
                        <label for="Filter-{{ tag | handleize }}-{{ forloop.index }}" class="form-check-label option-label filter-checkbox" title="{{ tag | handleize }}">
                          {{ tag | escape }}
                        </label>
                      </div>
                    {% endif %}
                  {% endfor %}
                </div>
              </div>
            {% endif %}
          {% endfor %}
  
          
        </div>
      </myproduct-filter>
      
      <select id="sort-by" class="btn btn-secondary text-start">
        {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

        {% for option in collection.sort_options %}
          <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
            {{ option.name }}
          </option>
        {% endfor %}
      </select>

    </div>
    <div id="filtered-data" class="filtered-data col-12 my-3">
      {%- for filter in collection.filters -%}
          {%- for value in filter.active_values -%}
              <a class="active-filter__button me-2 mb-1 px-2 py-1 bg-gray-200 font-size-sm filter-option-clear" href="{{ value.url_to_remove }}">
              {{ value.label | escape }}
              <span class="icon-close lh-1 ms-2 icon-size-12"></span>
              </a>
          
          {%- endfor -%}
        {%- endfor -%}
    </div>

    {% paginate collection.products by 4 %}
      {% if collection.products.size == 0 %}
        <p class="text-center">No Products Available.</p>
      {% else %}
      <div class="row" id="collection-product-grid-2">
        {% for product in collection.products %}
          {% unless product.tags contains productExcludeTag %}
            <div class="col-12 col-lg-3 col-md-4 col-sm-6 mt-2 mb-2 d-flex align-items-stretch justify-content-around">
                {% render 'card-product-layout-2', product: product %}
            </div>
          {% endunless %}
        {% endfor %}
      </div>
        {% if paginate.pages > 1 %}
          <div class="row">
            <div class="col-12 text-center mt-5 mb-5">
              <a href="{{ paginate.next.url }}" class="btn btn-primary text-white" id="load-more-product">
                  Load More
              </a>
            </div>
          </div>
        {% endif %}
      {% endif %}
    {% endpaginate %}
  </div>
</div>




{% schema %}
  {
    "name": "collection layout 2",
    "settings": [],
    "blocks": [
      {
      "type": "tags_group",
      "name": "Tag group",
      "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Heading",
            "default": "Tag Group"
          },
          {
            "type": "textarea",
            "id": "tag_list",
            "label": "Tag list (one per line)",
            "default": "First tag \nSecond tag \nThird tag",
            "info": "Tags are case sensitive and must match your product tag exactly"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Product Grid 2",
        "category": "Collection"
      }
    ]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
<script>
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function(e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
   // location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>