{%- liquid 
  assign productExcludeTag = settings.product_exclude_tag_text
-%}
<div class="{% if section.settings.fluid_layout %}container-fluid{% else %}container{% endif %}">
  <div class="row mt-5 mb-5">
    <div class="col-12">
      {% if collection.description != blank %}
        <div class="text-center">
          {{ collection.description }}
        </div>
    {% endif %}
    </div>
  </div>
  <div class="row" id="colproductdata-sec">

    <div class="col-12 mt-5 d-flex justify-content-between align-items-center">
      <div class="d-flex align-items-center">
        <span class="me-3 fw-bold">Filter : </span>
        {%- for filter in collection.filters -%}
          <div class="dropdown me-3">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdown-{{ filter.label }}" data-bs-toggle="dropdown" aria-expanded="false">
              {{ filter.label }}
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdown-{{ filter.label }}">
              {% if filter.type == list %}
                {%- for value in filter.values -%}
                  <div class="form-check">
                    <input type="checkbox"
                        class="form-check-input"
                        name="{{ value.param_name }}"
                        value="{{ value.value }}"
                        id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                        data-handle="{{ value.value | handle }}"
                        {% if value.active %}checked{% endif %}
                        {% if value.count == 0 and value.active == false %}disabled{% endif %}
                    >
                    <label for="Filter-{{ filter.label | escape }}-{{ forloop.index }}" class="form-check-label option-label filter-checkbox{% if value.count == 0 and value.active == false %} filter-checkbox--disabled{% endif %}" title="{{ value.label | escape }}">
                      {{ value.label | escape }} <span>{{ value.count }}</span>
                    </label>
                  </div>
                {% endfor %}
              {% elsif filter.type == price_range %}
                <div class="range-input">
                  <input type="range" class="range-min" min="0" max="10000" value="2500" step="100">
                  <input type="range" class="range-max" min="0" max="10000" value="7500" step="100">
                </div>
              {% endif %}
          
            </div>
          </div>   
        {% endfor %}
      </div>
      <select id="sort-by" class="p-2">
        {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

        {% for option in collection.sort_options %}
          <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
            {{ option.name }}
          </option>
        {% endfor %}
      </select>

    </div>

    {% paginate collection.products by 4 %}
      {% if collection.products.size == 0 %}
        <p class="text-center">No Products Available.</p>
      {% else %}
      <div class="row" id="collection-product-grid-2">
        {% for product in collection.products %}
          {% unless product.tags contains productExcludeTag %}
            <div class="col-12 col-lg-3 col-md-4 col-sm-6 mt-2 mb-2 d-flex align-items-stretch justify-content-around">
                {% render 'card-product-layout-2', product: product %}
            </div>
          {% endunless %}
        {% endfor %}
      </div>
        {% if paginate.pages > 1 %}
          <div class="row">
            <div class="col-12 text-center mt-5 mb-5">
              <a href="{{ paginate.next.url }}" class="btn btn-primary text-white" id="load-more-product">
                  Load More
              </a>
            </div>
          </div>
        {% endif %}
      {% endif %}
    {% endpaginate %}
  </div>
</div>




{% schema %}
  {
    "name": "collection layout 2",
    "settings": [],
    "presets": [
      {
        "name": "Product Grid 2",
        "category": "Blog"
      }
    ]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
<script>
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function(e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
   // location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>